from modurec.features.feature import FeatureData

epsilon = 0.05

mean_lifetimes = [FeatureData('mean', dict(n=0, dim=2)),
                  FeatureData('mean', dict(n=1, dim=2)),
                  FeatureData('mean', dict(n=0, dim=3)),
                  FeatureData('mean', dict(n=1, dim=3)),
                  FeatureData('mean', dict(n=0, dim=4)),
                  FeatureData('mean', dict(n=1, dim=4)),
                  FeatureData('mean', dict(n=0, dim=10)),
                  FeatureData('mean', dict(n=1, dim=10)),
                  FeatureData('mean', dict(n=0, dim=2, kind='abs')),
                  FeatureData('mean', dict(n=1, dim=2, kind='abs')),
                  FeatureData('mean', dict(n=0, dim=10, kind='abs')),
                  FeatureData('mean', dict(n=1, dim=10, kind='abs')),
                  FeatureData('mean', dict(n=0, dim=2, kind='phi')),
                  FeatureData('mean', dict(n=1, dim=2, kind='phi')),
                  FeatureData('mean', dict(n=0, dim=10, kind='phi')),
                  FeatureData('mean', dict(n=1, dim=10, kind='phi')),
                  FeatureData('mean', dict(n=0, dim=2, kind='abs', fil='star')),
                  FeatureData('mean', dict(n=0, dim=2, kind='phi', fil='star')),
                  FeatureData('mean', dict(n=0, dim=2, step=30)),
                  FeatureData('mean', dict(n=1, dim=2, step=30)),
                  FeatureData('mean', dict(n=0, dim=4, step=30)),
                  FeatureData('mean', dict(n=1, dim=4, step=30))]
# FeatureData('mean', dict(n=0, dim=4, step='symbol_rate')),
# FeatureData('mean', dict(n=1, dim=4, step='symbol_rate'))]

counting_features = [FeatureData('no', dict(n=1, dim=2)),
                     FeatureData('no', dict(n=1, dim=3)),
                     FeatureData('no', dict(n=1, dim=4)),
                     FeatureData('no', dict(n=1, dim=10)),
                     FeatureData('no', dict(n=0, dim=2, eps=epsilon)),
                     FeatureData('no', dict(n=0, dim=3, eps=epsilon)),
                     FeatureData('no', dict(n=0, dim=4, eps=epsilon)),
                     FeatureData('no', dict(n=0, dim=10, eps=epsilon)),
                     FeatureData('no', dict(n=0, dim=2, kind='abs', fil='star')),
                     FeatureData('no', dict(n=0, dim=2, kind='phi', fil='star')), ]
# FeatureData('no', dict(n=0, dim=4, step='symbol_rate')),
# FeatureData('no', dict(n=1, dim=4, step='symbol_rate'))]

variance_features = [FeatureData('var', dict(n=0, dim=2)),
                     FeatureData('var', dict(n=1, dim=2)),
                     FeatureData('var', dict(n=0, dim=3)),
                     FeatureData('var', dict(n=1, dim=3)),
                     FeatureData('var', dict(n=0, dim=4)),
                     FeatureData('var', dict(n=1, dim=4)),
                     FeatureData('var', dict(n=0, dim=10)),
                     FeatureData('var', dict(n=1, dim=10)),
                     FeatureData('var', dict(n=0, dim=2, kind='abs')),
                     FeatureData('var', dict(n=1, dim=2, kind='abs')),
                     FeatureData('var', dict(n=0, dim=10, kind='abs')),
                     FeatureData('var', dict(n=1, dim=10, kind='abs')),
                     FeatureData('var', dict(n=0, dim=2, kind='phi')),
                     FeatureData('var', dict(n=1, dim=2, kind='phi')),
                     FeatureData('var', dict(n=0, dim=10, kind='phi')),
                     FeatureData('var', dict(n=1, dim=10, kind='phi')),
                     FeatureData('var', dict(n=0, dim=2, kind='abs', fil='star')),
                     FeatureData('var', dict(n=0, dim=2, kind='phi', fil='star')),
                     FeatureData('var', dict(n=0, dim=2, step=30)),
                     FeatureData('var', dict(n=1, dim=2, step=30)),
                     FeatureData('var', dict(n=0, dim=4, step=30)),
                     FeatureData('var', dict(n=1, dim=4, step=30))]
# FeatureData('var', dict(n=0, dim=4, step='symbol_rate')),
# FeatureData('var', dict(n=1, dim=4, step='symbol_rate'))]

entropy_features = [FeatureData('entropy', dict(n=0, dim=2)),
                    FeatureData('entropy', dict(n=1, dim=2)),
                    FeatureData('entropy', dict(n=0, dim=3)),
                    FeatureData('entropy', dict(n=1, dim=3)),
                    FeatureData('entropy', dict(n=0, dim=4)),
                    FeatureData('entropy', dict(n=1, dim=4)),
                    FeatureData('entropy', dict(n=0, dim=10)),
                    FeatureData('entropy', dict(n=1, dim=10)),
                    FeatureData('entropy', dict(n=0, dim=2, kind='abs')),
                    FeatureData('entropy', dict(n=1, dim=2, kind='abs')),
                    FeatureData('entropy', dict(n=0, dim=10, kind='abs')),
                    FeatureData('entropy', dict(n=1, dim=10, kind='abs')),
                    FeatureData('entropy', dict(n=0, dim=2, kind='phi')),
                    FeatureData('entropy', dict(n=1, dim=2, kind='phi')),
                    FeatureData('entropy', dict(n=0, dim=10, kind='phi')),
                    FeatureData('entropy', dict(n=1, dim=10, kind='phi')),
                    FeatureData('entropy', dict(n=0, dim=2, kind='abs', fil='star')),
                    FeatureData('entropy', dict(n=0, dim=2, kind='phi', fil='star')),
                    FeatureData('entropy', dict(n=0, dim=2, step=30)),
                    FeatureData('entropy', dict(n=1, dim=2, step=30)),
                    FeatureData('entropy', dict(n=0, dim=4, step=30)),
                    FeatureData('entropy', dict(n=1, dim=4, step=30, input='births')),
                    FeatureData('entropy', dict(n=0, dim=2, input='deaths')),
                    FeatureData('entropy', dict(n=1, dim=2, input='births')),
                    FeatureData('entropy', dict(n=0, dim=3, input='deaths')),
                    FeatureData('entropy', dict(n=1, dim=3, input='births')),
                    FeatureData('entropy', dict(n=0, dim=4, input='deaths')),
                    FeatureData('entropy', dict(n=1, dim=4, input='births')),
                    FeatureData('entropy', dict(n=0, dim=10, input='deaths')),
                    FeatureData('entropy', dict(n=1, dim=10, input='births')),
                    FeatureData('entropy', dict(n=1, dim=2, kind='abs', input='births')),
                    FeatureData('entropy', dict(n=1, dim=10, kind='abs', input='births')),
                    FeatureData('entropy', dict(n=1, dim=2, kind='phi', input='births')),
                    FeatureData('entropy', dict(n=1, dim=10, kind='phi', input='births')),
                    FeatureData('entropy', dict(n=1, dim=2, kind='abs', input='deaths')),
                    FeatureData('entropy', dict(n=1, dim=10, kind='abs', input='deaths')),
                    FeatureData('entropy', dict(n=1, dim=2, kind='phi', input='deaths')),
                    FeatureData('entropy', dict(n=1, dim=10, kind='phi', input='deaths'))]

# FeatureData('entropy', dict(n=0, dim=20)),
# FeatureData('entropy', dict(n=1, dim=20)),

p = 2
wasser_features = [FeatureData('wasser_ampl', dict(n=0, p=p, dim=2)),
                   FeatureData('wasser_ampl', dict(n=1, p=p, dim=2)),
                   FeatureData('wasser_ampl', dict(n=1, p=p, dim=3)),
                   FeatureData('wasser_ampl', dict(n=1, p=p, dim=3)),
                   FeatureData('wasser_ampl', dict(n=0, p=p, dim=4)),
                   FeatureData('wasser_ampl', dict(n=1, p=p, dim=4)),
                   FeatureData('wasser_ampl', dict(n=0, p=p, dim=10)),
                   FeatureData('wasser_ampl', dict(n=1, p=p, dim=10)),
                   FeatureData('wasser_ampl', dict(n=0, dim=2, p=p, kind='abs')),
                   FeatureData('wasser_ampl', dict(n=1, dim=2, p=p, kind='abs')),
                   FeatureData('wasser_ampl', dict(n=0, dim=10, p=p, kind='abs')),
                   FeatureData('wasser_ampl', dict(n=1, dim=10, p=p, kind='abs')),
                   FeatureData('wasser_ampl', dict(n=0, dim=2, p=p, kind='phi')),
                   FeatureData('wasser_ampl', dict(n=1, dim=2, p=p, kind='phi')),
                   FeatureData('wasser_ampl', dict(n=0, dim=10, p=p, kind='phi')),
                   FeatureData('wasser_ampl', dict(n=1, dim=10, p=p, kind='phi')),
                   FeatureData('wasser_ampl', dict(n=0, dim=2, kind='abs', fil='star', p=p)),
                   FeatureData('wasser_ampl', dict(n=0, dim=2, kind='phi', fil='star', p=p)),
                   FeatureData('wasser_ampl', dict(n=0, dim=2, step=30, p=p)),
                   FeatureData('wasser_ampl', dict(n=1, dim=2, step=30, p=p)),
                   FeatureData('wasser_ampl', dict(n=0, dim=4, step=30, p=p)),
                   FeatureData('wasser_ampl', dict(n=1, dim=4, step=30, p=p))]

all_features = mean_lifetimes + counting_features + variance_features + entropy_features + wasser_features
